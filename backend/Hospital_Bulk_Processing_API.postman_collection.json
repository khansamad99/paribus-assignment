{
	"info": {
		"_postman_id": "550e8400-e29b-41d4-a716-446655440000",
		"name": "Hospital Bulk Processing API",
		"description": "Complete API collection for Hospital Bulk Processing System with concurrent processing, progress tracking, and resume capability.\n\n**Features:**\n- Environment switching between Local and Production\n- CSV file upload testing\n- Real-time progress tracking\n- Resume capability testing\n- Comprehensive error handling\n\n**Environments:**\n- Local: http://localhost:8000\n- Production: https://paribus-assignment.onrender.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health & Info",
			"item": [
				{
					"name": "Root - API Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Get API information and welcome message"
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check API health status"
					},
					"response": []
				}
			],
			"description": "Basic API health and information endpoints"
		},
		{
			"name": "CSV Validation",
			"item": [
				{
					"name": "Validate CSV File",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": [],
									"description": "CSV file to validate (max 20 hospitals)"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/hospitals/validate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"hospitals",
								"validate"
							]
						},
						"description": "Validate CSV file format and content before processing.\n\n**CSV Format:**\n```\nname,address,phone\nGeneral Hospital,123 Main St,555-1234\nCity Medical Center,456 Oak Ave,555-5678\nMetropolitan Health,789 Pine Rd,\n```\n\n**Requirements:**\n- Required: name, address\n- Optional: phone\n- Max 20 hospitals\n- UTF-8 encoding"
					},
					"response": []
				}
			],
			"description": "CSV file validation endpoints"
		},
		{
			"name": "Bulk Processing",
			"item": [
				{
					"name": "Bulk Create Hospitals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store batch_id for progress tracking",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('batch_id', response.batch_id);",
									"    console.log('Batch ID stored:', response.batch_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": [],
									"description": "CSV file with hospital data (max 20 hospitals)"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/hospitals/bulk",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"hospitals",
								"bulk"
							]
						},
						"description": "Bulk create hospitals from CSV file with concurrent processing.\n\n**Process:**\n1. Upload CSV file\n2. Validate and parse data\n3. Process hospitals concurrently\n4. Activate batch if all successful\n5. Return comprehensive results\n\n**Performance:** ~95% faster than sequential processing"
					},
					"response": []
				}
			],
			"description": "Bulk processing endpoints for hospital creation"
		},
		{
			"name": "Progress Tracking",
			"item": [
				{
					"name": "Get Batch Progress",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/hospitals/progress/{{batch_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"hospitals",
								"progress",
								"{{batch_id}}"
							]
						},
						"description": "Get real-time progress for a batch processing operation.\n\n**Note:** batch_id is automatically set from bulk processing response.\nManually set batch_id in environment if needed."
					},
					"response": []
				},
				{
					"name": "Clean Up Old Progress",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/hospitals/progress/cleanup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"hospitals",
								"progress",
								"cleanup"
							]
						},
						"description": "Clean up old progress tracking data (older than 24 hours)"
					},
					"response": []
				}
			],
			"description": "Real-time progress tracking endpoints"
		},
		{
			"name": "Resume Capability",
			"item": [
				{
					"name": "Get Resumable Batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store first resumable batch_id if available",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.length > 0) {",
									"        pm.environment.set('resumable_batch_id', response[0].batch_id);",
									"        console.log('Resumable Batch ID stored:', response[0].batch_id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/hospitals/resumable",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"hospitals",
								"resumable"
							]
						},
						"description": "Get all batches that can be resumed after failure.\n\n**Returns:**\n- batch_id\n- total_hospitals\n- processed_hospitals\n- failed_hospitals\n- resume_from_row\n- failure_reason\n- last_checkpoint_time"
					},
					"response": []
				},
				{
					"name": "Resume Batch Processing",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/hospitals/resume/{{resumable_batch_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"hospitals",
								"resume",
								"{{resumable_batch_id}}"
							]
						},
						"description": "Resume a failed bulk processing operation from where it left off.\n\n**Smart Resume:**\n- Skips already processed hospitals\n- Continues from failure point\n- Maintains all previous progress\n- Attempts batch activation if all successful\n\n**Note:** resumable_batch_id is set from Get Resumable Batches response"
					},
					"response": []
				},
				{
					"name": "Abandon Batch",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/hospitals/batch/{{resumable_batch_id}}/abandon",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"hospitals",
								"batch",
								"{{resumable_batch_id}}",
								"abandon"
							]
						},
						"description": "Abandon a failed batch and clean up its data.\n\n**Actions:**\n- Remove batch from memory\n- Delete persistent storage file\n- Clean up all associated data\n\n**Note:** This action is irreversible"
					},
					"response": []
				}
			],
			"description": "Resume capability endpoints for fault tolerance"
		},
		{
			"name": "Test Scenarios",
			"item": [
				{
					"name": "Scenario 1: Complete Workflow",
					"item": [
						{
							"name": "1. Validate CSV",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": [],
											"description": "Upload your test CSV file here"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/hospitals/validate",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"hospitals",
										"validate"
									]
								},
								"description": "Step 1: Validate CSV file before processing"
							},
							"response": []
						},
						{
							"name": "2. Bulk Process",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const response = pm.response.json();",
											"    pm.environment.set('batch_id', response.batch_id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": [],
											"description": "Same CSV file as validation"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/hospitals/bulk",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"hospitals",
										"bulk"
									]
								},
								"description": "Step 2: Process the validated CSV file"
							},
							"response": []
						},
						{
							"name": "3. Track Progress",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/hospitals/progress/{{batch_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"hospitals",
										"progress",
										"{{batch_id}}"
									]
								},
								"description": "Step 3: Monitor processing progress"
							},
							"response": []
						}
					],
					"description": "Complete workflow: Validate → Process → Track"
				},
				{
					"name": "Scenario 2: Resume Testing",
					"item": [
						{
							"name": "1. List Resumable Batches",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const response = pm.response.json();",
											"    if (response.length > 0) {",
											"        pm.environment.set('resumable_batch_id', response[0].batch_id);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/hospitals/resumable",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"hospitals",
										"resumable"
									]
								},
								"description": "Step 1: Find available resumable batches"
							},
							"response": []
						},
						{
							"name": "2. Resume Processing",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}/hospitals/resume/{{resumable_batch_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"hospitals",
										"resume",
										"{{resumable_batch_id}}"
									]
								},
								"description": "Step 2: Resume the failed batch"
							},
							"response": []
						},
						{
							"name": "3. Check Final Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/hospitals/progress/{{resumable_batch_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"hospitals",
										"progress",
										"{{resumable_batch_id}}"
									]
								},
								"description": "Step 3: Verify final processing status"
							},
							"response": []
						}
					],
					"description": "Resume workflow: List → Resume → Verify"
				},
				{
					"name": "Scenario 3: Error Testing",
					"item": [
						{
							"name": "Invalid File Type",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": [],
											"description": "Upload a non-CSV file (e.g., .txt, .json)"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/hospitals/validate",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"hospitals",
										"validate"
									]
								},
								"description": "Test error handling with invalid file type"
							},
							"response": []
						},
						{
							"name": "Missing File",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/hospitals/bulk",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"hospitals",
										"bulk"
									]
								},
								"description": "Test error handling with missing file"
							},
							"response": []
						},
						{
							"name": "Invalid Batch ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/hospitals/progress/invalid-batch-id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"hospitals",
										"progress",
										"invalid-batch-id"
									]
								},
								"description": "Test error handling with invalid batch ID"
							},
							"response": []
						}
					],
					"description": "Error handling and edge case testing"
				}
			],
			"description": "Complete test scenarios for different workflows"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default values if not present",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:8000');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}